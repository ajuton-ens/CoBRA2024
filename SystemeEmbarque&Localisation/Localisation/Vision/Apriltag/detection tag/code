from dt_apriltags import Detector
import cv2
import numpy
import os
cam=cv2.VideoCapture(0)
for i in range(20):
    
    
    ret, image = cam.read()

    print(image.shape)
    img=cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    mtx = numpy.array([[2541,0,1692],[0,2542,1315],[0,0,1]])
    dist = numpy.array([[7.343*10**(-3),1.236,-1.877*10**(-3),6.804*10**(-3)]])

    at_detector = Detector()
    fx=2541/5.125
    fy=2542/5.125
    cy=1315/5.125
    cx=1692/5.125
    img_undistorded = cv2.undistort(img, mtx, dist, None, newCameraMatrix=mtx)
    tag=at_detector.detect(img_undistorded, estimate_tag_pose=True, camera_params=[fx,fy,cx,cy], tag_size=0.16)

    #H=tag[0].homography
    #image_plat=cv2.warpPerspective(img, H, (w, h))
    print(tag)
    #cv2.imshow('Origine', img)
    #cv2.imshow('redressee', image_plat)
    #cv2.waitKey(500)
    #cv2.destroyAllWindows()
    #tag=at_detector.detect(img)
    



"""
Traceback (most recent call last):
  File "/home/cobra0/Documents/oui/on y est presque.py", line 19, in <module>
    img_undistorted = cv2.undistort(img, mtx, dist, None, mtx)
cv2.error: OpenCV(4.5.3) :-1: error: (-5:Bad argument) in function 'undistort'
> Overload resolution failed:
>  - cameraMatrix is not a numpy array, neither a scalar
>  - Expected Ptr<cv::UMat> for argument 'cameraMatrix'
"""

